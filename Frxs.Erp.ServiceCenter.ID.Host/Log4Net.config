<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
  </configSections>

  <log4net>
    <root>
      <!--ERROR级别及以上记录日志-->
      <level value="ERROR" />
    </root>

    <logger name="NormalLogger">
      <!--ERROR级别及以上记录日志-->
      <level value="ERROR" />
    </logger>

    <logger name="DebugLogger">
      <!--INFO级别及以上记录日志-->
      <level value="INFO" />
      <!--调试文件日志，additivity为false表示不继承根日志对象-->
      <appender-ref ref="DebugFileAppender" additivity="false" />
    </logger>

    <logger name="ExceptionLogger">
      <!--ERROR级别及以上记录日志-->
      <level value="ERROR" />
      <!--异常文件日志，additivity为false表示不继承根日志对象-->
      <appender-ref ref="ExceptionFileAppender" additivity="false" />
    </logger>

    <logger name="DBOperatingLogger">
      <!--ERROR级别及以上记录日志-->
      <level value="ERROR" />
      <!--异常文件日志，additivity为false表示不继承根日志对象-->
      <appender-ref ref="DBOperatingFileAppender" additivity="false" />
    </logger>

    <logger name="XSOperatorLogger">
      <!--INFO级别及以上记录日志-->
      <level value="INFO" />
      <!--操作数据库日志，additivity为false表示不继承根日志对象-->
      <appender-ref ref="XSOperatorADONetAppender" additivity="false" />
    </logger>

    <!--调试文件日志-->
    <appender name="DebugFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--文件路径-->
      <file value="DebugLog/" />
      <!--关闭静态文件名-->
      <staticLogFileName value="false" />
      <!--文件命名-->
      <datePattern value="yyyy-MM-dd&quot;.log&quot;" />
      <!--追加文件-->
      <appendToFile value="true" />
      <!--每个log文件最大是2M，如果超过2M将重新创建一个新的log文件，并将原来的log文件备份。-->
      <maximumFileSize value="2MB" />
      <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
        <conversionPattern value="%n%property{LogTime}%n[内容]%property{LogContent}%n" />
      </layout>
    </appender>

    <!--异常文件日志-->
    <appender name="ExceptionFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--文件路径-->
      <file value="ExceptionLog/" />
      <!--关闭静态文件名-->
      <staticLogFileName value="false" />
      <!--文件命名-->
      <datePattern value="yyyy-MM-dd&quot;.log&quot;" />
      <!--追加文件-->
      <appendToFile value="true" />
      <!--每个log文件最大是2M，如果超过2M将重新创建一个新的log文件，并将原来的log文件备份。-->
      <maximumFileSize value="2MB" />
      <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
        <conversionPattern value="%n%property{LogTime}%n[异常内容]%property{LogContent}%n[源]%property{LogSource}%n[操作]%property{LogOperation}%n[IP]%property{LogIp}%n" />
      </layout>
    </appender>

    <!--数据操作文件日志-->
    <appender name="DBOperatingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--文件路径-->
      <file value="DBOperatingLog/" />
      <!--关闭静态文件名-->
      <staticLogFileName value="false" />
      <!--文件命名-->
      <datePattern value="yyyy-MM-dd&quot;.log&quot;" />
      <!--追加文件-->
      <appendToFile value="true" />
      <!--每个log文件最大是2M，如果超过2M将重新创建一个新的log文件，并将原来的log文件备份。-->
      <maximumFileSize value="2MB" />
      <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
        <conversionPattern value="%n%property{LogTime}%n[操作]%property{LogOperation}%n[数据源]%property{LogSource}%n[SQL语句]%property{LogContent}%n" />
      </layout>
    </appender>

    <!--操作日志-->
    <appender name="XSOperatorADONetAppender" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="1" />
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="server=192.168.3.32;database=FRXSOPERATORLOG;uid=sa;pwd=123456" />
      <commandText value="INSERT INTO XSOperatorLog (SysID,FirstMenuID,SecondMenuID,Action,Remark,OperatorID,OperatorName,CreateTime) VALUES (@SysID,@FirstMenuID,@SecondMenuID,@Action,@Remark,@OperatorID,@OperatorName,@CreateTime)" />
      <parameter>
        <parameterName value="@SysID" />
        <dbType value="Int32" />
        <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
          <conversionPattern value="%property{SysID}" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@FirstMenuID" />
        <dbType value="Int32" />
        <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
          <conversionPattern value="%property{FirstMenuID}" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@SecondMenuID" />
        <dbType value="Int32" />
        <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
          <conversionPattern value="%property{SecondMenuID}" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Action" />
        <dbType value="Int32" />
        <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
          <conversionPattern value="%property{Action}" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Remark" />
        <dbType value="String" />
        <size value="800" />
        <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
          <conversionPattern value="%property{Remark}" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@OperatorID" />
        <dbType value="Int32" />
        <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
          <conversionPattern value="%property{OperatorID}" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@OperatorName" />
        <dbType value="String" />
        <size value="40" />
        <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
          <conversionPattern value="%property{OperatorName}" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@CreateTime" />
        <dbType value="DateTime" />
        <layout type="Frxs.Platform.Utility.Log.ReflectionLayout,Frxs.Platform.Utility">
          <conversionPattern value="%property{CreateTime}" />
        </layout>
      </parameter>
    </appender>

  </log4net>

</configuration>
