<%@ Page Language="C#" %>
<%@ Assembly Name="System.Xml" %>
<%@ Assembly Name="System.Xml.Linq" %>
<%@ Assembly Name="Frxs.ServiceCenter.Api.Core" %>
<%@ Assembly Name="Frxs.ServiceCenter.DataSync.Message.Server" %>
<%@ Import Namespace="Frxs.ServiceCenter.Api.Core" %>
<%@ Import Namespace="System.Collections.Specialized" %>
<%@ Import Namespace="System.Collections" %>
<%@ Import Namespace="System.Web" %>
<%@ Import Namespace="System.Xml" %>
<%@ Import Namespace="System.Xml.Linq" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Frxs.ServiceCenter.DataSync.Message.Server.Actions" %>

<script runat="server">
    public RequestContext RequestContext;
    public ActionResult ActionResult;
</script>

<%
    var responseDto = this.ActionResult.Data as Frxs.ServiceCenter.DataSync.Message.Server.IEvenSelector;
    
    //文档路径
    var docPath = "~/bin/{0}.xml".With(this.RequestContext.ActionDescriptor.ActionType.Assembly.GetName().Name);
    XmlDocument xmlDoc = new XmlDocument();
    xmlDoc.Load(this.RequestContext.HttpContext.Server.MapPath(docPath));
%>

/* ***************************************************************************
 * <auto-generated>
 *     This code was generated by a tool.
 *     .NET CLR Runtime Version:<%:Environment.Version.Major %>.<%:Environment.Version.Minor %>.<%:Environment.Version.Build %>.<%:Environment.Version.Revision %>
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 * </auto-generated>
 * ***************************************************************************
 * FRXS(ISC) zhangliang4629@163.com <%:DateTime.Now.ToString("yyyy\\/MM\\/dd HH:mm:ss.fff") %>
 * **************************************************************************/
using System;
using System.Collections.Generic;
using Frxs.ServiceCenter.DataSync.Message.ConsumerClient.EventArgs;

<!--NewLine-->

namespace Frxs.ServiceCenter.DataSync.Message.ConsumerClient
{
    /// <summary>
    /// 消息消费客户端(共【<%:responseDto.GetEventDescriptors().Count() %>】个触发事件)
    /// </summary>
    public partial class MessageHandler
    {

        <%
            foreach (var x in responseDto.GetEventDescriptors().GroupBy(o=>o.GroupName)){ %>

        <!--NewLine-->
        #region <%:x.Key %> - Events: <%:x.Count() %>

        <%foreach(var item in x.OrderBy(o=>o.GroupName).ThenBy(o=>o.SubGroupName)) { 

            //注释说明
            var summary = xmlDoc.SelectSingleNode("doc/members/member[@name='T:{0}']".With(item.MessageBodyType.FullName));
            var summaryTexts = (summary.IsNull() ? "" : summary.InnerText.Trim()).Split(Environment.NewLine.ToCharArray(), StringSplitOptions.RemoveEmptyEntries);

        %>

        <!--NewLine-->

        /// <summary>
        <%foreach (var text in summaryTexts){ %>
        /// <%: text.Trim()%>
        <%} %>
        /// </summary>
        /// <param name="sender">object</param>
        /// <param name="e"><%:item.EventName %>EventAgrs</param>
        /// <see cref="<%:item.EventName %>EventAgrs"/>
        protected virtual void On<%:item.EventName %>(object sender, <%:item.EventName %>EventAgrs e)
        {

        }

        <%} %>

        <!--NewLine-->
        #endregion
        
        <%} %>

        <!--NewLine-->

        /// <summary>
        /// 消费消息
        /// </summary>
        /// <param name="messages">消息集合</param>
        internal void Start(IEnumerable<Message<dynamic>> messages)
        {
            //串行化消费消息
            foreach (var item in messages)
            {
                //初始化重试次数
                int currentRetry = this.MaxRetries;

                <%foreach (var x in responseDto.GetEventDescriptors().GroupBy(o => o.GroupName))
                    { %>

                <!--NewLine-->
                #region <%:x.Key %> - Events: <%:x.Count() %>

                <%foreach (var item in x)
                                                                                         {

                                                                                             //注释说明
                                                                                             var summary = xmlDoc.SelectSingleNode("doc/members/member[@name='T:{0}']".With(item.MessageBodyType.FullName));

                                                                                             var summaryTexts = (summary.IsNull() ? "" : summary.InnerText.Trim()).Split(Environment.NewLine.ToCharArray(), StringSplitOptions.RemoveEmptyEntries);

              %>

                <!--NewLine-->

                <%foreach (var text in summaryTexts){ %>
                // <%: text.Trim()%>
                <%} %>
                if (item.Topic.Equals("<%:item.EventName %>"))
                {
                    var eventArgs = this.ConvertToEventArgs<<%:item.EventName %>EventAgrs>(item);
                    while (currentRetry > 0)
                    {
                        try
                        {
                            this.On<%:item.EventName %>(this, eventArgs);
                            if (this.OnMessageExecutedSuccess != null)
                                this.OnMessageExecutedSuccess(this, eventArgs);
                            break;
                        }
                        catch (Exception exc)
                        {
                            currentRetry--;
                            if (this.OnMessageExecutedException != null)
                                this.OnMessageExecutedException(this, eventArgs, exc);
                        }
                    }
                    continue;
                }

                <%} %>

                <!--NewLine-->
                #endregion

                <%} %>
            }
        }
    }
}

