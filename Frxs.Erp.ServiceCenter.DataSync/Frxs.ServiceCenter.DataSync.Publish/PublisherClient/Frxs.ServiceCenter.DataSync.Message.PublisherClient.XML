<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Frxs.ServiceCenter.DataSync.Message.PublisherClient</name>
    </assembly>
    <members>
        <member name="T:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension">
            <summary>
            消息发布扩展 (共【30】个发布事件)
            </summary>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.AttributeCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            商品规格创建(Created)事件
            备注：在规格（Attribute）中的使用
            使用范围：规格（Attribute）新增操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="attributeId">商品规格编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Attribute.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.AttributeChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            商品规格变更(Changed)事件
            备注：在规格（Attribute）、规格值（AttributeValue）中的使用
            使用范围：规格（Attribute）编辑,规格值（AttributeValue）增删改 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="attributeId">商品规格编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Attribute.02</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.AttributeRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            商品规格移除(Remove)事件
            备注：在 规格（Attribute）中的使用
            使用范围：规格（Attribute）移除操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="attributeId">商品规格编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Attribute.03</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.BrandCategoryCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            品牌创建(Created)事件
            备注：在 品牌（BrandCategory）中的使用
            使用范围：品牌（BrandCategory）创建 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="brandId">品牌编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.BrandCategory.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.BrandCategoryChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            品牌变更(Changed)事件
            备注：在 品牌（BrandCategory）中的使用
            使用范围：品牌（BrandCategory）编辑 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="brandId">品牌编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.BrandCategory.02</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.BrandCategoryRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            品牌移除(Remove)事件
            备注：在 品牌（BrandCategory）中的使用
            使用范围：品牌（BrandCategory）移除 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="brandId">品牌编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.BrandCategory.03</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.CategoryCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            基本分类创建(Created)事件
            备注：当基本分类在创建的时候，需要发布此事件
            使用范围：基本分类（Category）创建 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="categoryId">基本分类编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Category.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.CategoryChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            基本分类变更(Changed)事件
            备注：在 基本分类（Category）中的使用
            使用范围：基本分类（Category）编辑 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="categoryId">基本分类编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Category.02</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.CategoryRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            基本分类移除(Remove)事件
            备注：在 基本分类（Category）中的使用
            使用范围：基本分类（Category）移除 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="categoryId">基本分类编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Category.03</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.ProductCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            商品创建(Created)事件
            备注：商品创建会同时将其关联的母商品（BaseProduct）、商品规格属性关系列表（ProductAttribute）、商品规格图片（ProductAttributesPicture）、
            商品条码列表（ProductBarCodes）、母商品文字详情（ProductDescription）、母商品图片详情列表（ProductDescriptionPicture）
            商品主图列表（ProductPictureDetail）、商品供应商关系列表（ProductsVendor）、商品单位列表（ProductUnit） 同步过来
            使用范围：商品创建 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="productId">商品编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Product.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.ProductChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            商品变更(Changed)事件
            备注：在母商品（BaseProduct）、商品规格属性关系（ProductAttribute）、商品规格属性图片（ProductAttributesPicture）、
            商品条码（ProductBarCodes）、母商品图文详情（ProductDescription、ProductDescriptionPicture）、
            商品主图（ProductPictureDetail）、商品供应商关系（ProductsVendor）、商品单位（ProductUnit）中的使用
            使用范围：商品更改、母商品增删改,商品规格属性关系列表增删改、商品规格属性图片增删改、商品条码列表增删改、母商品图文详情增删改、
            商品主图增删改、商品供应商关系列表增删改、商品单位列表增删改 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="productId">商品编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Product.02</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.ProductRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            商品移除(Remove)事件
            备注： 只同步商品（Product）中的数据（更改状态）过来
            使用范围：商品移除 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="productId">商品编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Product.03</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.ShopCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            门店创建(Created)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="shopID">门店编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Shop.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.ShopChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            门店变更(Changed)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="shopID">门店编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Shop.02</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.ShopRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            门店移除(Remove)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="shopID">门店编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Shop.03</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.ShopCategoryChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            运营分类变更(Changed)事件
            备注：在  运营分类（ShopCategory）中的使用
            使用范围：运营分类（ShopCategory）编辑 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="categoryId">运营分类编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.ShopCategory.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.ShopCategoryCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            运营分类创建(Created)事件
            备注：在  运营分类（ShopCategory）中的使用
            使用范围：运营分类（ShopCategory）创建 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="categoryId">运营分类编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.ShopCategory.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.ShopCategoryRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            运营分类移除(Remove)事件
            备注：在  运营分类（ShopCategory）中的使用
            使用范围：运营分类（ShopCategory）移除 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="categoryId">运营分类编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.ShopCategory.03</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.SysDictCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.String)">
            <summary>
            数据字典创建(Created)事件
            备注：在数据字典主表（SysDict）中的使用，同时同步 相关数据字典明细（SysDictDetail）列表数据
            使用范围：数据字典（SysDict）创建 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="dictCode">数据字典编码</param>
            <returns>PublishResult</returns>
            <remarks>Base.SysDict.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.SysDictChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.String)">
            <summary>
            数据字典 变更(Changed)事件
            备注：在数据字典主表（SysDict）、数据字典明细表（SysDictDetail）中的使用
            使用范围：数据字典（SysDict）编辑,数据字典明细表（SysDictDetail）增删改 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="dictCode">数据字典编码</param>
            <returns>PublishResult</returns>
            <remarks>Base.SysDict.02</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.SysDictRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.String)">
            <summary>
            数据字典移除(Remove)事件
            备注：在数据字典主表（SysDict）移除 数据的 同时 移除 相关数据字典明细（SysDictDetail）列表数据
            使用范围：数据字典（SysDict）移除 操作中使用
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="dictCode">数据字典编码</param>
            <returns>PublishResult</returns>
            <remarks>Base.SysDict.03</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.VendorCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            供应商创建(Created)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="vendorID">供应商编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Vendor.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.VendorChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            供应商变更(Changed)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="vendorID">供应商编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Vendor.02</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.VendorRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            供应商移除(Remove)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="vendorID">供应商编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Vendor.03</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.VendorTypeCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            供应商类型创建(Created)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="vendorTypeID">供应商类型编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.VendorType.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.VendorTypeChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            供应商类型变更(Changed)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="vendorTypeID">供应商类型编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.VendorType.02</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.VendorTypeRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            供应商类型移除(Remove)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="vendorTypeID">供应商类型编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.VendorType.03</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.WarehouseCreated(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            仓库创建(Created)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="wid">仓库编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Warehouse.01</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.WarehouseChanged(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            仓库改变(Changed)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="wid">仓库编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Warehouse.02</remarks>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClientExtension.WarehouseRemoved(Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient,System.Int32)">
            <summary>
            仓库移除(Removed)事件
            </summary>
            <param name="client">MessagePublisherClient</param>
            <param name="wid">仓库编号</param>
            <returns>PublishResult</returns>
            <remarks>Base.Warehouse.03</remarks>
        </member>
        <member name="T:Frxs.ServiceCenter.DataSync.Message.PublisherClient.ResponseResult">
            <summary>
            返回接受对象
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.ResponseResult.Flag">
            <summary>
            是否成功0成功，其他值为不成功
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.ResponseResult.FlagDescription">
            <summary>
            flag的描述
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.ResponseResult.CachedTime">
            <summary>
            缓存时间
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.ResponseResult.Data">
            <summary>
            返回的ID值
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.ResponseResult.Info">
            <summary>
            接口返回的消息
            </summary>
        </member>
        <member name="T:Frxs.ServiceCenter.DataSync.Message.PublisherClient.IJosnSerializer">
            <summary>
            JSON序列化接口，交给外部调用系统去实现（防止程序集冲突）
            </summary>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.IJosnSerializer.Deserialize``1(System.String)">
            <summary>
            消息摘要反序列化
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.IJosnSerializer.Serialize(System.Object)">
            <summary>
            消息摘要序列化，用于保存到其他存储介质
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient">
            <summary>
            消息发布客户端
            </summary>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient.#ctor(System.String,Frxs.ServiceCenter.DataSync.Message.PublisherClient.IJosnSerializer,System.Func{System.Int32})">
            <summary>
            初始化消息发布客户端
            </summary>
            <param name="messageServerUrl">消息中间件服务器地址</param>
            <param name="josnSerializer">JOSN格式化器</param>
            <param name="wid">如果为null，默认将仓库设置为0</param>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient.Execute(System.Object)">
            <summary>
            执行远程调用
            </summary>
            <param name="message">消息体</param>
            <returns></returns>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient.Enabled">
            <summary>
            是否开启发布消息事件触发（当此值被设置为false的时候，系统将不会发布事件到消息中间件），默认true(开启事件发布)
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient.ServerUrl">
            <summary>
            消息中间件服务器地址
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient.WID">
            <summary>
            仓库编号
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.MessagePublisherClient.JosnSerializer">
            <summary>
            JSON序列化接口
            </summary>
        </member>
        <member name="T:Frxs.ServiceCenter.DataSync.Message.PublisherClient.PublishResult">
            <summary>
            发布结果
            </summary>
        </member>
        <member name="M:Frxs.ServiceCenter.DataSync.Message.PublisherClient.PublishResult.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="isSuccess">是否发布成功</param>
            <param name="messageId">此次发布的消息ID</param>
            <param name="message">返回的消息</param>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.PublishResult.IsSuccess">
            <summary>
            是否发布成功
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.PublishResult.Message">
            <summary>
            返回的消息
            </summary>
        </member>
        <member name="P:Frxs.ServiceCenter.DataSync.Message.PublisherClient.PublishResult.MessageId">
            <summary>
            此次发布的消息ID
            </summary>
        </member>
    </members>
</doc>
